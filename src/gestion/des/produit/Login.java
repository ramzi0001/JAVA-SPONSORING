/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestion.des.produit;

import gestion.des.produit.dao.ConnectDB;
import gestion.des.produit.modele.Date_licence;
import gestion.des.produit.modele.User;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Enumeration;
import java.util.Date;


/**
 *
 * @author ziram
 */
public class Login extends javax.swing.JFrame {
public static String vendeur ;
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_HORIZ);
    icon();
        setResizable(false);
    }
    void icon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().
                getResource("Cartgrill_icon-icons.com_51191.png")));
    }

    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("gestion des produits");
        setBounds(new java.awt.Rectangle(200, 150, 100, 100));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(null);

        jButton1.setBackground(new java.awt.Color(182, 36, 110));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(79, 261, 131, 37);

        jButton2.setBackground(new java.awt.Color(182, 36, 110));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("change info");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(271, 261, 145, 37);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(182, 36, 110));
        jLabel1.setText("login");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(133, 31, 160, 43);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel2.setText("Mot de passe ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(47, 196, 130, 26);

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 0, 102));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(197, 131, 180, 40);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel3.setText("Utilisateur");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(47, 132, 130, 26);

        jPasswordField1.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(255, 0, 102));
        jPanel1.add(jPasswordField1);
        jPasswordField1.setBounds(197, 189, 180, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/icon/cryptographie-cles-cadenas-mot-passe-securite-icone-4965-128.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4);
        jLabel4.setBounds(400, 10, 130, 140);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestion/des/produit/about.png"))); // NOI18N
        jLabel5.setText("jLabel5");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(0, 0, 549, 332);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
InfoLoginChange in=new InfoLoginChange();in.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    ConnectDB db=new ConnectDB();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try{  User user = new User();
           user.setnom_prenom_user(jTextField1.getText());
           user.setpassword(jPasswordField1.getText());
     
      if(db.FindUser(user)==1)
    {
        
       BashoardForm d = new BashoardForm();
       d.setVisible(true);
       this.setVisible(false);
       vendeur =user.getnom_prenom_user();
    }else
      {
      JOptionPane.showMessageDialog(null, "erreur, le nom d'utilisateur ou mot de passe est incorrecte");
      }
}catch(Exception e){
     JOptionPane.showMessageDialog(null, "erreur, verifier les donnes");
}
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
      
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         db.ConnexionIntoDataBase();
    }//GEN-LAST:event_formWindowOpened

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        Activation a = new Activation();
        a.setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            // String licence = "0ZmVRWJTJ+JvX4P9WbD/akIy7hCgyQK08C3RSfacBUQ9tDsEdxJp+WfDX+nCHBxpQsi8+pApt7kSKabtlGBBIA==";
                     
                    try {
                        
                        try {
                            
                            long memory = Runtime.getRuntime().totalMemory() ;
                            String cpu = Runtime.getRuntime().availableProcessors()+"";
                            String hote = InetAddress.getLocalHost().getHostName();
                            String typOS = System.getProperty("os.arch");
                            File[] roots = File.listRoots();
                            String rootabs =roots[0].getAbsolutePath() ;
                            long rootS =roots[0].getTotalSpace();
                          /*  for(File root : roots){
                            rootabs = rootabs+ root.getAbsolutePath();
                            rootS = rootS+ root.getTotalSpace();
                            
                                    }*/
                            String cart = "";
                            String info = cpu+hote+rootabs+rootS+memory+typOS;
                            
                            AES c = new AES();
                            String infoencrypt =c.encrypt(info);
                             
                            FileWriter myWriter;
                                try {
                                    myWriter = new FileWriter("licence.txt");
                                    
                                    myWriter.write(infoencrypt);
                                    myWriter.close();
                                } catch (IOException ex) {
                                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            
                           
                            
                           // if(!infoencrypt.equals(licence)){System.exit(0);}
                           
                       
                        ConnectDB db=new ConnectDB();
                        db.ConnexionIntoDataBase();
                        
                        SimpleDateFormat sdft = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                        Date d = new Date();
                        Date_licence dates =  db.date_licence();
                        String serial = db.getSerial();
                       int etat = dates.getEtat() ;
                       if(etat==0){
                           db.clear("vente_commande");
                           db.clear("commande");
                           String s= c.encrypt(sdft.format(d));
                           String e =  c.encrypt(sdft.format(d.getTime()+(1000*60*60*24*14)));    
                           
                       String sql = "Update date_licence set date_start = '"+s+"' , date_point = '"+s+"' , date_end ='"+e+"' , etat = '1' where id = '0' ";
                       db.UpdateCommand(sql);
                       Login l = new Login();
                          l.setVisible(true);
                       }
                      
                       else{
                                   
                        if (c.key_validation(infoencrypt, serial)){
                          Login l = new Login();
                          l.setVisible(true);
                        }   
                        else{    
                        db.Actualise();
                        Date date_start =sdft.parse(c.decrypt(dates.getDate_start())); 
                        Date date_point =sdft.parse(c.decrypt(dates.getDate_point())); 
                        Date date_end =sdft.parse(c.decrypt(dates.getDate_end()));
                        boolean diff = sdft.format(date_start.getTime()+(1000*60*60*24*14)).equals(sdft.format(date_end)) ;
                        if((date_point.after(d) ) || (date_end.before(d)) || (date_start.after(date_point)) || !(diff)) {
                            Activation a = new Activation();
                          a.setVisible(true);
                        }
                        else {
                          Login l = new Login();
                          l.setVisible(true);
                        }
                        }
                       }
                       
                     
                        } catch (UnknownHostException ex) {
                            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                       
                       
                        
                        
                 } catch (ParseException ex1) {
                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                        
                  
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
